import{_ as t,c as r,o,ae as n}from"./chunks/framework.26GY31ux.js";const c=JSON.parse('{"title":"element-pro-components","description":"element-pro-components 是一个基于 element-plus, vue, vue-router 的一个适用于中后台开发的一套组件库","frontmatter":{"title":"element-pro-components","description":"element-pro-components 是一个基于 element-plus, vue, vue-router 的一个适用于中后台开发的一套组件库","image":"https://picsum.photos/536/354?random&date=2021-01-31","date":"2021-01-31T00:00:00.000Z","vssue-title":"element-pro-components","tags":["vue","vue-router","element-plus"],"categories":["project"]},"headers":[],"relativePath":"lib/element-pro-components.md","filePath":"lib/element-pro-components.md","lastUpdated":1759465091000}'),a={name:"lib/element-pro-components.md"};function l(i,e,p,h,s,m){return o(),r("div",null,[...e[0]||(e[0]=[n('<p>element-pro-components 是一个基于 <a href="https://element-plus.org/" target="_blank" rel="noreferrer">element-plus</a>, <a href="https://v3.vuejs.org/" target="_blank" rel="noreferrer">vue</a>, <a href="https://next.router.vuejs.org/" target="_blank" rel="noreferrer">vue-router</a> 的一个适用于中后台快速开发的一套组件库</p><h2 id="起因" tabindex="-1">起因 <a class="header-anchor" href="#起因" aria-label="Permalink to &quot;起因&quot;">​</a></h2><p>在工作中需要开发及维护多个后台管理系统。经常在想如何更优雅的处理不同项目间的协同开发，尝试过 <a href="./../posts/git-template-project">git单模板多项目的探索</a> 的方法优化，但还是觉得不够彻底。增加公共功能和修复公共的BUG，都需要前往 template 项目修改，完成后手动同步到各个需要的项目。后来尝试将公共的组件分离到一个单独的本地仓库中，通过 npm 能够安装本地包的特点，在需要的项目中安装。这样安装、修改、更新比起 template 都要方便不少，于是就有了做这个项目的想法。</p><p>当然这也仅仅是一个自用顺带分享的项目，不太可能像一些模版项目完善。它的目标不是代替模版项目，而是提供一套简单的组件任你自由发挥制作一套属于自己的模版项目</p><h2 id="优势" tabindex="-1">优势 <a class="header-anchor" href="#优势" aria-label="Permalink to &quot;优势&quot;">​</a></h2><ul><li>通过更新依赖版本及可同步组件变动，方便使用</li><li>不需要花时间精简模版中未使用的依赖</li><li>支持按需引入组件及样式</li><li>api 风格贴近 element-plus</li><li>基于 TypeScript 开发，完善的类型推断</li><li>与业务完全脱离，避免不同业务的组件混用产生错误</li><li>提供完善的代码提示</li></ul><h2 id="组件" tabindex="-1">组件 <a class="header-anchor" href="#组件" aria-label="Permalink to &quot;组件&quot;">​</a></h2><h3 id="布局相关" tabindex="-1">布局相关 <a class="header-anchor" href="#布局相关" aria-label="Permalink to &quot;布局相关&quot;">​</a></h3><ul><li><a href="https://tolking.github.io/element-pro-components/zh-CN/components/layout" target="_blank" rel="noreferrer">Layout</a> 基础的布局组件，能够自动从 vue-router 获取路由信息生成菜单</li><li><a href="https://tolking.github.io/element-pro-components/zh-CN/components/menu" target="_blank" rel="noreferrer">Menu</a> 自动从 vue-router 获取路由信息生成菜单，已包含在 Layout 组件中</li><li><a href="https://tolking.github.io/element-pro-components/zh-CN/components/breadcrumb" target="_blank" rel="noreferrer">Breadcrumb</a> 根据当前页面路由信息自动生成面包屑</li><li><a href="https://tolking.github.io/element-pro-components/zh-CN/components/tabs" target="_blank" rel="noreferrer">Tabs</a> 记录浏览的历史页面自动生成 tabs</li><li><a href="https://tolking.github.io/element-pro-components/zh-CN/components/link" target="_blank" rel="noreferrer">Link</a> 方便处理内部和外部跳转</li></ul><h3 id="表单相关" tabindex="-1">表单相关 <a class="header-anchor" href="#表单相关" aria-label="Permalink to &quot;表单相关&quot;">​</a></h3><ul><li><a href="https://tolking.github.io/element-pro-components/zh-CN/components/form" target="_blank" rel="noreferrer">Form</a> 根据 columns 配置信息动态生成表单，具体使用请查看文档</li><li><a href="https://tolking.github.io/element-pro-components/zh-CN/components/radio" target="_blank" rel="noreferrer">Radio</a> 根据 data 信息生成单选组，方便在 Form 中使用单选</li><li><a href="https://tolking.github.io/element-pro-components/zh-CN/components/radio#radiobutton" target="_blank" rel="noreferrer">RadioButton</a> 同 Radio</li><li><a href="https://tolking.github.io/element-pro-components/zh-CN/components/checkbox" target="_blank" rel="noreferrer">Checkbox</a> 根据 data 信息生成多选组，方便在 Form 中使用多选</li><li><a href="https://tolking.github.io/element-pro-components/zh-CN/components/checkbox#checkboxbutton" target="_blank" rel="noreferrer">CheckboxButton</a> 同 Checkbox</li><li><a href="https://tolking.github.io/element-pro-components/zh-CN/components/select" target="_blank" rel="noreferrer">Select</a> 根据 data 信息生成选择器，方便在 Form 中使用选择器</li><li><a href="https://tolking.github.io/element-pro-components/zh-CN/components/tree-select" target="_blank" rel="noreferrer">TreeSelect</a> 树形结构选择器</li><li><a href="https://tolking.github.io/element-pro-components/zh-CN/components/input-tag" target="_blank" rel="noreferrer">InputTag</a> 多标签输入框</li><li><a href="https://tolking.github.io/element-pro-components/zh-CN/components/input-tag#autocompletetag" target="_blank" rel="noreferrer">AutocompleteTag</a> 同 InputTag，额外提供输入建议</li></ul><h3 id="表格相关" tabindex="-1">表格相关 <a class="header-anchor" href="#表格相关" aria-label="Permalink to &quot;表格相关&quot;">​</a></h3><ul><li><a href="https://tolking.github.io/element-pro-components/zh-CN/components/table" target="_blank" rel="noreferrer">Table</a> 根据 columns 配置信息动态生成表格，具体使用请查看文档</li><li><a href="https://tolking.github.io/element-pro-components/zh-CN/components/crud" target="_blank" rel="noreferrer">Crud</a> 基于 Form 和 Table 用于快速构建增删改查页面</li><li><a href="https://tolking.github.io/element-pro-components/zh-CN/components/column-setting" target="_blank" rel="noreferrer">ColumnSetting</a> 配合 Table 或 Crud 使用，动态控制表格中某一项的显示与隐藏</li></ul><h3 id="其它" tabindex="-1">其它 <a class="header-anchor" href="#其它" aria-label="Permalink to &quot;其它&quot;">​</a></h3><ul><li><a href="https://tolking.github.io/element-pro-components/zh-CN/components/descriptions" target="_blank" rel="noreferrer">Descriptions</a> 根据 columns 配置信息动态列表形式的展示字段，具体使用请查看文档</li></ul><h2 id="国际化" tabindex="-1">国际化 <a class="header-anchor" href="#国际化" aria-label="Permalink to &quot;国际化&quot;">​</a></h2><p>同 elememt-plus 一样可以通过 ElConfigProvider 注入国际化配置，暂未提供配置文件</p><h2 id="自定义主题" tabindex="-1">自定义主题 <a class="header-anchor" href="#自定义主题" aria-label="Permalink to &quot;自定义主题&quot;">​</a></h2><p>TODO: 等待 elememt-plus 深色主题推出后会相关进行同步更新。目前可以直接通过 css-variables 修改</p><h2 id="路由格式" tabindex="-1">路由格式 <a class="header-anchor" href="#路由格式" aria-label="Permalink to &quot;路由格式&quot;">​</a></h2><p>由于布局相关的组件需要从 vue-router 中获取路由信息，我们规范了路由格式详细可以查看 <a href="https://tolking.github.io/element-pro-components/zh-CN/guide/router" target="_blank" rel="noreferrer">路由和菜单</a></p><h2 id="贡献" tabindex="-1">贡献 <a class="header-anchor" href="#贡献" aria-label="Permalink to &quot;贡献&quot;">​</a></h2><p>组件库还处于开发阶段，部分功能还需要完善。如果你希望参与贡献，欢迎 <a href="https://github.com/tolking/element-pro-components/pulls" target="_blank" rel="noreferrer">Pull Request</a>。如果只是简单的文档相关的错误修正，你可以直接 PR。但如果是 BUG、新功能、新组件等，最好优先提 <a href="https://github.com/tolking/element-pro-components/issues" target="_blank" rel="noreferrer">issues</a></p><p>git 提交信息风格参考 <a href="https://github.com/vuejs/vue-next/blob/master/.github/commit-convention.md" target="_blank" rel="noreferrer">vue commit-convention</a></p><h2 id="链接" tabindex="-1">链接 <a class="header-anchor" href="#链接" aria-label="Permalink to &quot;链接&quot;">​</a></h2><p><a href="https://tolking.github.io/element-pro-components" target="_blank" rel="noreferrer">文档</a> 文档也是基于组件库开发的</p><p><a href="https://github.com/tolking/element-pro-components" target="_blank" rel="noreferrer">源码</a></p>',27)])])}const b=t(a,[["render",l]]);export{c as __pageData,b as default};

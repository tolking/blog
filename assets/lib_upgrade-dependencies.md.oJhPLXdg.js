import{_ as a,c as t,o as n,ae as i}from"./chunks/framework.Cn3sx2IA.js";const u=JSON.parse('{"title":"Upgrade Dependencies","description":"Upgrade Dependencies 是一个用于提示更新依赖的 VSCode 扩展","frontmatter":{"title":"Upgrade Dependencies","description":"Upgrade Dependencies 是一个用于提示更新依赖的 VSCode 扩展","image":"https://picsum.photos/536/354?random&date=2025-07-13","date":"2025-07-13T00:00:00.000Z","vssue-title":"upgrade-dependencies","tags":["vscode","extension"],"categories":["project"]},"headers":[],"relativePath":"lib/upgrade-dependencies.md","filePath":"lib/upgrade-dependencies.md","lastUpdated":1752381114000}'),p={name:"lib/upgrade-dependencies.md"};function d(r,e,o,s,c,l){return n(),t("div",null,e[0]||(e[0]=[i('<p>Upgrade Dependencies 是一个用于提示更新依赖的 VSCode 扩展</p><h2 id="起因" tabindex="-1">起因 <a class="header-anchor" href="#起因" aria-label="Permalink to &quot;起因&quot;">​</a></h2><p>团开发的过程中，可能会遇到不同成员安装不同依赖项版本的问题。例如，如果团队成员更新依赖项并提交代码，您可能没有意识到需要更新依赖项，从而导致代码执行错误。</p><p>所以我就想到写一个 VSCode 扩展来自动检测依赖项版本的变化，并提示更新。</p><h2 id="实现的功能" tabindex="-1">实现的功能 <a class="header-anchor" href="#实现的功能" aria-label="Permalink to &quot;实现的功能&quot;">​</a></h2><ul><li>自动检测锁文件的变化，并在发生变化时提示更新依赖项</li></ul><p><img src="https://github.com/tolking/upgrade-dependencies/raw/HEAD/images/information.png" alt="Information"></p><ul><li>在 package.json 页面右上角添加手动更新和升级依赖项的按钮</li></ul><p><img src="https://github.com/tolking/upgrade-dependencies/raw/HEAD/images/navigation.png" alt="Navigation"></p><h2 id="底层原理" tabindex="-1">底层原理 <a class="header-anchor" href="#底层原理" aria-label="Permalink to &quot;底层原理&quot;">​</a></h2><p>该扩展会在激活的时候读取当前工作区中的 lock 文件并生成一个 MD5 值，用于和之前缓存的 MD5 值进行对比，如果不一致则说明 lock 文件发生了变化，提示用户更新依赖项。</p><p>同时也会检测 lock 文件的变化，如果发生变化则会提示用户更新依赖项。</p><p><a href="https://github.com/tolking/upgrade-dependencies" target="_blank" rel="noreferrer">源码</a></p>',13)]))}const h=a(p,[["render",d]]);export{u as __pageData,h as default};

import{_ as a,c as r,a as t,z as e,o as u}from"./chunks/framework.C1tv1HY1.js";const d=JSON.parse('{"title":"vant-nuxt","description":"vant-nuxt 是一个为 Nuxt 项目准备的自动引入模块","frontmatter":{"title":"vant-nuxt","description":"vant-nuxt 是一个为 Nuxt 项目准备的自动引入模块","image":"https://picsum.photos/536/354?random&date=2023-08-20","date":"2023-08-20T00:00:00.000Z","vssue-title":"vant-nuxt","tags":["vue","vant","nuxt"],"categories":["project"]},"headers":[],"relativePath":"lib/vant-nuxt.md","filePath":"lib/vant-nuxt.md","lastUpdated":1729775426000}'),l={name:"lib/vant-nuxt.md"};function s(o,n,i,p,x,v){return u(),r("div",null,n[0]||(n[0]=[t("p",null,[e("vant-nuxt 是一个为 "),t("a",{href:"https://vant-ui.github.io/vant",target:"_blank",rel:"noreferrer"},"vant-ui"),e(" 组件库能够在 "),t("a",{href:"https://nuxt.com",target:"_blank",rel:"noreferrer"},"Nuxt"),e(" 中方便使用而制作的模块")],-1),t("p",null,"花费大量时间看 Nuxt 源码，不能够白看。所以在某一个契机下我为 vant-ui 制作了一个 Nuxt 模块，方便在 Nuxt 中使用 vant-ui。",-1),t("p",null,[e("整体同 "),t("a",{href:"./element-plus-nuxt"},"element-plus-nuxt"),e("，但 vant-ui 的目录更加统一同时功能更少，所以代码更加简洁。如果想了解底层实现，vant-nuxt 的源码相较于 element-plus-nuxt 更加容易阅读。")],-1),t("p",null,[t("a",{href:"https://github.com/vant-ui/vant-nuxt",target:"_blank",rel:"noreferrer"},"源码")],-1)]))}const m=a(l,[["render",s]]);export{d as __pageData,m as default};
